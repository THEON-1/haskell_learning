{-}
ghci> prop x xs = (length xs) + 1 == (length $ x:xs)
ghci> quickCheck prop
+++ OK, passed 100 tests.

cabal install quickCheck
-}

--import Test.QuickCheck

prop1 a b = (a+b) == (b+a)

prop2 xs = length $ tail xs == length xs - 1
{-
ghci> quickCheck prop
*** Failed! Exception: 'Prelude.tail: empty list'
(after 1 test):
[]
-}
prop3 xs =
    not (null xs) ==>
    length $ tail xs == length xs - 1

--ghci> quickCheck (verbose prop)

prop4 xs =
    not (null xs) ==>
    length $ tail xs === length xs - 1

rev xs = rev_aux [] xs
    where
        rev_aux acc [] = acc
        rev_aux acc (x:xs) = rev_aux (x:acc) xs

propRev xs = collect (length xs) $ reverse xs === rev xs
propRev xs = classify (null xs) "empty" $ reverse xs === rev xs

--ghci> quickCheck (withMaxSuccess 10000 propRev)

prop5 k v m = lookup k ((k, v):m) == Just v
    where types = (k :: Int, v :: Int)
